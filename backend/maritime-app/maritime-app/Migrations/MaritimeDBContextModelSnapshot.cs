// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using maritime_app.Data;

#nullable disable

namespace maritime_app.Migrations
{
    [DbContext(typeof(MaritimeDBContext))]
    partial class MaritimeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("maritime_app.Models.Country", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("visitedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("maritime_app.Models.Port", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("portCountry")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("portName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("maritime_app.Models.Ship", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<double>("maxSpeed")
                        .HasColumnType("double precision");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("maritime_app.Models.Voyage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("arrivalPortId")
                        .HasColumnType("integer");

                    b.Property<int>("departurePortId")
                        .HasColumnType("integer");

                    b.Property<int>("shipId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("voyageDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("voyageEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("voyageStart")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("id");

                    b.HasIndex("arrivalPortId");

                    b.HasIndex("departurePortId");

                    b.HasIndex("shipId");

                    b.ToTable("Voyages");
                });

            modelBuilder.Entity("maritime_app.Models.Voyage", b =>
                {
                    b.HasOne("maritime_app.Models.Port", "arrivalPort")
                        .WithMany("arrivingVoyages")
                        .HasForeignKey("arrivalPortId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("maritime_app.Models.Port", "departurePort")
                        .WithMany("departingVoyages")
                        .HasForeignKey("departurePortId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("maritime_app.Models.Ship", "ship")
                        .WithMany("voyages")
                        .HasForeignKey("shipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("arrivalPort");

                    b.Navigation("departurePort");

                    b.Navigation("ship");
                });

            modelBuilder.Entity("maritime_app.Models.Port", b =>
                {
                    b.Navigation("arrivingVoyages");

                    b.Navigation("departingVoyages");
                });

            modelBuilder.Entity("maritime_app.Models.Ship", b =>
                {
                    b.Navigation("voyages");
                });
#pragma warning restore 612, 618
        }
    }
}
